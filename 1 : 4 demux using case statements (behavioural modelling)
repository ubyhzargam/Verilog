module demux(out0,out1,out2,out3,s1,s0,in);
output out0,out1,out2,out3;
reg out0,out1,out2,out3;
input s1,s0,in;
always @(in or s1 or s0)
case({s1,s0})
2'b00: begin out0=in;out1=1'bz;out2=1'bz;out3=1'bz; end
2'b01: begin out0=1'bz;out1=in;out2=1'bz;out3=1'bz; end
2'b10: begin out0=1'bz;out1=1'bz;out2=in;out3=1'bz; end
2'b11: begin out0=1'bz;out1=1'bz;out2=1'bz;out3=in; end
2'b1x,2'b0x,2'bx1,2'bx0,2'bxx,2'bzx,2'bxz : begin
out0=1'bx;out1=1'bx;out2=1'bx;out3=1'bx; end
2'b1z,2'b0z,2'bz1,2'bz0,2'bzz : begin 
out0=1'bz;out1=1'bz;out2=1'bz;out3=1'bz; end
default :$display("Invalid select signal");
endcase
endmodule

module stimulus;
reg s1,s0,in;
wire out0,out1,out2,out3;
demux d(out0,out1,out2,out3,s1,s0,in);
initial
$monitor($time," units ", " S0 = %b, S1= %b, in = %b, out0 = %b, out1 = %b, out2= %b, out3=%b", s0,s1,in,out0,out1,out2,out3);
initial 
begin
s1=1'b0;
s0=1'b0;
in=1'b0;
#5 in=1'b1;
#5 s0=1'b1;
#5 s1=1'b1;
#5 s0=1'b0;
#5 s1=1'b0; s0=1'bx;
#5 s1=1'bz;
#5 s0=1'b1;
end
endmodule
