module fulladder1 (sum,cout,cin,a,b);

input cin,a,b;
output sum,cout;
wire s1,c1,s2;

xor(s1,a,b);
xor(sum,s1,cin);
and(c1,a,b);
and(s2,s1,cin);
or(cout,c1,s2);

endmodule

module fulladder4(sum,cout,cin,a,b);

input [3:0] a,b;
input cin;
output [3:0] sum;
output cout;
wire c1,c2,c3;

fulladder1 fa0(sum[0],c1,cin,a[0],b[0]);
fulladder1 fa1(sum[1],c2,c1,a[1],b[1]);
fulladder1 fa2(sum[2],c3,c2,a[2],b[2]);
fulladder1 fa3(sum[3],cout,c3,a[3],b[3]);

endmodule

module stimulus;

reg [3:0] a,b;
reg cin;
wire [3:0] sum;
wire cout;

fulladder4 f(sum,cout,cin,a,b);

initial 
begin
$monitor($time,"A = %b, B= %b, Cin = %b, Sum = %b, Cout = %b \n",a,b,cin,sum,cout);
end
initial 
begin
a=4'd0;b=4'd0;cin=1'd0;
#10 a=4'd2;b=4'd2;
#10 cin=1'd1;
#10 cin=1'd0;a=4'd8;b=4'd8;
#10 a=4'd10;b=4'd10;
end
endmodule
